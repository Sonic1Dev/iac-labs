# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
    - name: Install Poetry dependencies
      working-directory: ./example-app 
      run: poetry install --no-root
    - name: Lint with flake8
      run: |
        # Uruchamianie lintowania po zainstalowaniu zależności przez poetry
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry run pytest

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run formatter
        run: |
          poetry run task lint

  formatter:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run formatter
        run: |
          poetry run task formatter

  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run security checks
        run: |
          poetry run task security

  unittests:
    needs: [lint, formatter, security]
    runs-on: ubuntu-latest
    steps:
      - name: Run unit tests
        run: poetry run pytest
