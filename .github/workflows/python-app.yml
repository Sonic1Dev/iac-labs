name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      dependencies-installed: ${{ steps.dependency-step.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          version: 1.3.4
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      - name: Install project dependencies
        id: dependency-step
        run: poetry install
        env:
          POETRY_VIRTUALENVS_PATH: ${{ runner.temp }}/.venv

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint with flake8
        run: poetry run flake8 .

  formatter:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run formatter
        run: poetry run task formatter

  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run security checks
        run: poetry run task security

  unittests:
    needs: [lint, formatter, security]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run unit tests
        run: poetry run pytest
